name: publish

on:
  workflow_run:
    workflows: ["front-linter"]
    types:
      - completed

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/react-auth:latest

jobs:
  publish:
    name: Publish Docker Image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry with PAT
        run: |
          echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and Publish Backend
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  deploy:
    needs: publish
    name: Deploy Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Install SSH Key
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: Connect to Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            docker stop react-auth-container || true
            docker rm react-auth-container || true
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            docker run -d \
              -e VITE_APP_NAME=${{ secrets.VITE_APP_NAME }} \
              -e VITE_BACKEND_ENDPOINT=${{ secrets.VITE_BACKEND_ENDPOINT }} \
              --name react-auth-container \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            exit
          EOF
      - name: Clean SSH Key
        run: rm -rf ~/.ssh
