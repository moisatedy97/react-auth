name: publish

on:
  workflow_run:
    workflows: ["front-linter"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Build the React App
        run: npm run build

      - name: Set up Docker
        uses: actions/setup-docker@v1

      - name: Build Docker image
        run: docker build -t react-app .

      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Tag Docker image
        run: docker tag react-app ${{ secrets.DOCKER_USERNAME }}/react-app:latest

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/react-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          ssh -i <(echo "$SSH_PRIVATE_KEY") -o StrictHostKeyChecking=no "$VPS_USER@$VPS_HOST" << 'EOF'
            docker pull $DOCKER_USERNAME/react-app:latest
            docker stop react-app || true
            docker rm react-app || true
            docker run -d -p 80:5000 --name react-app $DOCKER_USERNAME/react-app:latest
          EOF
